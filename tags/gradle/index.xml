<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gradle on Jeroen Mols</title>
    <link>https://jeroenmols.com/tags/gradle/</link>
    <description>Recent content in Gradle on Jeroen Mols</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>info@jeroenmols.com (Jeroen Mols)</managingEditor>
    <webMaster>info@jeroenmols.com (Jeroen Mols)</webMaster>
    <copyright>Â© 2024 Jeroen Mols</copyright>
    <lastBuildDate>Wed, 17 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://jeroenmols.com/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Share code between Android and Jvm in Kotlin multiplatform</title>
      <link>https://jeroenmols.com/blog/2021/03/17/share-code-kotlin-multiplatform/</link>
      <pubDate>Wed, 17 Mar 2021 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2021/03/17/share-code-kotlin-multiplatform/</guid>
      <description>While Android supports most Java language features, it doesn&amp;rsquo;t support every API that Java provides. On the other hand, Kotlin multiplatform only allows sharing code across all targets (commonMain), not a subset of targets (commonJvm).</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2021/03/17/share-code-kotlin-multiplatform/featured.jpg" />
    </item>
    
    <item>
      <title>Migrating away from JCenter</title>
      <link>https://jeroenmols.com/blog/2021/02/04/migratingjcenter/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2021/02/04/migratingjcenter/</guid>
      <description>This week JFrog - out of nowhere - announced to completely remove their Maven repository. Since they&amp;rsquo;ll pull it offline already by May 2021 (!!!) it&amp;rsquo;s time to urgently migrate away.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2021/02/04/migratingjcenter/featured.jpg" />
    </item>
    
    <item>
      <title>Test library releases using an in project Maven repository</title>
      <link>https://jeroenmols.com/blog/2020/12/02/inproject-maven/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2020/12/02/inproject-maven/</guid>
      <description>Short, powerful post on how to test the release version of libraries directly within a project without having to deploy them to Maven first.
As a bonus, there will also be an open-source example showcasing all of this in action.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2020/12/02/inproject-maven/featured.jpg" />
    </item>
    
    <item>
      <title>Android library development - Dependencies</title>
      <link>https://jeroenmols.com/blog/2020/11/11/library-dependencies/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2020/11/11/library-dependencies/</guid>
      <description>Ever had a build failure while integrating an SDK? Wonder how you can avoid your SDK customers having dependency conflicts? How many transitive dependencies should your SDK have?</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2020/11/11/library-dependencies/featured.jpg" />
    </item>
    
    <item>
      <title>Android library development - Modularization</title>
      <link>https://jeroenmols.com/blog/2020/11/04/library-modularization/</link>
      <pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2020/11/04/library-modularization/</guid>
      <description>With modularization being all the hype, should you also modularize an SDK? Are fat aar files really needed? And how do you prevent internal APIs from being exposed on your public interface?</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2020/11/04/library-modularization/featured.jpg" />
    </item>
    
    <item>
      <title>Android library development - Getting started</title>
      <link>https://jeroenmols.com/blog/2020/10/28/library-gettingstarted/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2020/10/28/library-gettingstarted/</guid>
      <description>Having switched to Android SDK development over the past year, I&amp;rsquo;ve run into quite a few interesting and unexpected challenges. So how does library development differ from app development?</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2020/10/28/library-gettingstarted/featured.jpg" />
    </item>
    
    <item>
      <title>Kdoc for Android libraries using Dokka</title>
      <link>https://jeroenmols.com/blog/2020/02/19/dokka-code-documentation/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2020/02/19/dokka-code-documentation/</guid>
      <description>A great way to make your library easier to use it to generate code documentation for its public interface. The default way to do this in Kotlin is to generate KDoc using the official Dokka plugin.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2020/02/19/dokka-code-documentation/featured.jpg" />
    </item>
    
    <item>
      <title>Implementation vs API dependency</title>
      <link>https://jeroenmols.com/blog/2017/06/14/androidstudio3/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2017/06/14/androidstudio3/</guid>
      <description>Upgrading to Android studio 3.0 territory will make building multi-module projects a lot faster, but it also means a breaking Gradle plugin API change unfortunately.</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2017/06/14/androidstudio3/featured.png" />
    </item>
    
    <item>
      <title>The hidden cost of code coverage</title>
      <link>https://jeroenmols.com/blog/2016/09/01/coveragecost/</link>
      <pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate>
      <author>info@jeroenmols.com (Jeroen Mols)</author>
      <guid>https://jeroenmols.com/blog/2016/09/01/coveragecost/</guid>
      <description>Code coverage is an awesome way to motivate you and your team to write more tests. But did you know that simply enabling it slows down your build significantly?</description>
      <media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2016/09/01/coveragecost/featured.png" />
    </item>
    
  </channel>
</rss>
