<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing on Jeroen Mols</title><link>https://jeroenmols.com/tags/testing/</link><description>Recent content in Testing on Jeroen Mols</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>info@jeroenmols.com (Jeroen Mols)</managingEditor><webMaster>info@jeroenmols.com (Jeroen Mols)</webMaster><copyright>Â© 2024 Jeroen Mols</copyright><lastBuildDate>Thu, 17 Jan 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://jeroenmols.com/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Testing LiveData in JUnit 4 and JUnit 5</title><link>https://jeroenmols.com/blog/2019/01/17/livedatajunit5/</link><pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2019/01/17/livedatajunit5/</guid><description>Architecture components are one of the most exciting things that happened to Android in the past years. But how do you effectively go about and testing this?</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2019/01/17/livedatajunit5/featured.jpg"/></item><item><title>Can you fix the test?</title><link>https://jeroenmols.com/blog/2018/12/06/fixthetest/</link><pubDate>Thu, 06 Dec 2018 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2018/12/06/fixthetest/</guid><description>Learning from analyzing code is one of the greatest ways to improve your skills. Can you spot the mistakes in the tests below?
This post brings a fun little quiz for both testing gurus as novices, with a deep dive into the how and why of awesome tests.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2018/12/06/fixthetest/featured.jpg"/></item><item><title>The 100% code coverage problem</title><link>https://jeroenmols.com/blog/2017/11/28/coveragproblem/</link><pubDate>Tue, 28 Nov 2017 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2017/11/28/coveragproblem/</guid><description>While you may be tempted to strive for 100% code coverage, that would be a horrible idea. Besides some code being hard to test, the concept of coverage is actually fundamentally limited.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2017/11/28/coveragproblem/featured.png"/></item><item><title>Write awesome unit tests</title><link>https://jeroenmols.com/blog/2017/02/16/unittests/</link><pubDate>Thu, 16 Feb 2017 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2017/02/16/unittests/</guid><description>If you can code, you can also write unit tests. Writing awesome tests on the other hand is a different story. Don&amp;rsquo;t fool yourself: Unit testing code is production code that you will need to maintain, refactor and build upon for years to come.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2017/02/16/unittests/featured.png"/></item><item><title>Using Mockito 2.x on Android</title><link>https://jeroenmols.com/blog/2017/01/17/mockitoandroid/</link><pubDate>Tue, 17 Jan 2017 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2017/01/17/mockitoandroid/</guid><description>The Mockito team is on fire lately! Not only did they add support to mock final classes and methods, but now they allow running Mockito directly onto an actual Android device.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2017/01/17/mockitoandroid/featured.png"/></item><item><title>Extending Mockito</title><link>https://jeroenmols.com/blog/2016/10/31/mockitomatchers/</link><pubDate>Mon, 31 Oct 2016 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2016/10/31/mockitomatchers/</guid><description>Due to its clean simple api, Mockito has become world&amp;rsquo;s most popular Java mocking framework. After having covered all of its basics, it&amp;rsquo;s time to spice things up and start extending Mockito.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2016/10/31/mockitomatchers/featured.png"/></item><item><title>The hidden cost of code coverage</title><link>https://jeroenmols.com/blog/2016/09/01/coveragecost/</link><pubDate>Thu, 01 Sep 2016 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2016/09/01/coveragecost/</guid><description>Code coverage is an awesome way to motivate you and your team to write more tests. But did you know that simply enabling it slows down your build significantly?</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2016/09/01/coveragecost/featured.png"/></item><item><title>Testing made sweet with a Mockito</title><link>https://jeroenmols.com/blog/2016/06/24/droidcondetalk/</link><pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate><author>info@jeroenmols.com (Jeroen Mols)</author><guid>https://jeroenmols.com/blog/2016/06/24/droidcondetalk/</guid><description>At Droidcon Berlin 2016 I had a great time talking about testing using the Mockito framework. While the talk wasn&amp;rsquo;t recorded unfortunately, the great folks at Voice Republic recorded an audio version which you can listen to as a podcast or together with the slides.</description><media:content xmlns:media="http://search.yahoo.com/mrss/" url="https://jeroenmols.com/blog/2016/06/24/droidcondetalk/featured.png"/></item></channel></rss>