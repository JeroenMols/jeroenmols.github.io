<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://jeroenmols.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jeroenmols.com/" rel="alternate" type="text/html" /><updated>2023-07-24T22:40:17+02:00</updated><id>https://jeroenmols.com/feed.xml</id><title type="html">Jeroen Mols</title><subtitle>Blog and portfolio of Jeroen Mols, Software developer at Plaid and Google Developer Expert.</subtitle><author><name>Jeroen Mols</name></author><entry><title type="html">Using VPN during MDNS server development</title><link href="https://jeroenmols.com/blog/2023/07/24/vpn-development/" rel="alternate" type="text/html" title="Using VPN during MDNS server development" /><published>2023-07-24T00:00:00+02:00</published><updated>2023-07-24T00:00:00+02:00</updated><id>https://jeroenmols.com/blog/2023/07/24/vpn-development</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/07/24/vpn-development/"><![CDATA[<p>Are you using a VPN on your mobile device? Do you need to disable that to access your development web server over MDNS on your mobile device? Well‚Ä¶ read on to simplify your workflow.</p>

<h2 id="problem">Problem</h2>

<p>While using a mobile VPN, you might get a DNS error when trying to access your computer over MDNS (<code class="language-plaintext highlighter-rouge">.local</code> domain).</p>

<p><img src="https://jeroenmols.com/img/blog/vpn-development/dns_error.png" alt="DNS error when accessing .local domain on a VPN" /></p>

<p>This happens because the <code class="language-plaintext highlighter-rouge">jmols.local</code> domain isn‚Äôt an actual domain and hence the DNS server on the VPN cannot resolve it.</p>

<h2 id="solution">Solution</h2>

<p>A way to solve this is to use <a href="https://mullvad.net/en/help/split-tunneling-with-the-mullvad-app/">split tunneling</a>, which allows to exclude certain apps from the VPN.</p>

<p><img src="https://jeroenmols.com/img/blog/vpn-development/split_tunneling.png" alt="Split tunneling to exclude certain apps from the VPN" /></p>

<p>In my case, I decided to use two different browsers:</p>

<ul>
  <li>one for my normal use with VPN (Brave)</li>
  <li>one for development without VPN (Chrome)</li>
</ul>

<p>This allows me to access development URLs, whilst still securing all my personal internet usage.</p>

<p>However, this falls apart when I send myself a development URL or when I scan a QR code that links to my development server. This is because Android will use your default browser to open URLs and for personal use that should be a VPN-protected one.</p>

<p>Fortunately, I‚Äôve built a solution for that: an open-source app that intercepts all links to your local domain and redirects them to a browser of choice!</p>

<p><img src="https://jeroenmols.com/img/blog/vpn-development/url_interceptor.png" alt="App to intercept .local URLs and redirect them to a development browser" /></p>

<p>Here‚Äôs how to get started:</p>

<ul>
  <li>Clone the <a href="https://github.com/JeroenMols/DevelopmentUrlInterceptor">URLInterceptor Github repository</a></li>
  <li>Fill in your <a href="https://github.com/JeroenMols/DevelopmentUrlInterceptor/blob/f594ad171e70c34e6eacef2639db3f60b6752b6a/app/src/main/AndroidManifest.xml#L31">development url</a></li>
  <li>Set the package name of your <a href="https://github.com/JeroenMols/DevelopmentUrlInterceptor/blob/f594ad171e70c34e6eacef2639db3f60b6752b6a/app/src/main/java/com/jeroenmols/urlinterceptor/InterceptUrlActivity.kt#L14">development browser</a></li>
  <li>Install the app and follow the instructions to start intercepting URLs.</li>
</ul>

<p>That‚Äôs it!</p>

<blockquote>
  <p>There is a little bit of setup involved. This is because Android for security reasons first has to verify deep links using a <a href="https://developer.android.com/studio/write/app-link-indexing">.well-known hosted file</a> on your server. Since this would be tricky to do on a development server, I‚Äôve opted to manually inform Android to trust our app to handle these links instead.</p>
</blockquote>

<h2 id="wrap-up">Wrap up</h2>

<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/110770683160145866">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_fullstack-android-dns-activity-7089323809362604032-Tu2C?utm_source=share&amp;utm_medium=member_desktop">Linkedin</a> to let me know you've read this.</p>

<p>Using my URL interceptor app you can combine the best of both worlds: access <code class="language-plaintext highlighter-rouge">.local</code> domains without VPN and have all your other traffic protected by a VPN.</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a>.</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="vpn" /><category term="fullstack" /><category term="tips" /><category term="server" /><summary type="html"><![CDATA[Are you using a VPN on your mobile device? Do you need to disable that to access your development web server over MDNS on your mobile device? Well‚Ä¶ read on to simplify your workflow.]]></summary></entry><entry><title type="html">Gaming the pull request review system</title><link href="https://jeroenmols.com/blog/2023/06/26/prs-and-commits/" rel="alternate" type="text/html" title="Gaming the pull request review system" /><published>2023-06-26T00:00:00+02:00</published><updated>2023-06-26T00:00:00+02:00</updated><id>https://jeroenmols.com/blog/2023/06/26/prs-and-commits</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/06/26/prs-and-commits/"><![CDATA[<p>As developers, we love to build cool things and ship them as fast as reasonably possible. And to get that done, here are a few things you can do to ‚Äúgame the system‚Äù.</p>

<h2 id="pull-requests">Pull requests</h2>

<p>Put yourself in the shoes of the reviewer, how would you like your pull requests (PR) to be served?</p>

<p>I like mine:</p>

<ul>
  <li>nice and small, so they‚Äôre less intimidating to review and hence will be reviewed faster</li>
  <li>with a great description, context about why it‚Äôs built this way, and considered alternatives help to understand and learn</li>
  <li>visual with a screenshot (before/after visual change) or a graph (conversion change) or table (comparison)</li>
  <li>already reviewed, comments by the author add extra context and helpful insights to review the code</li>
</ul>

<p>Doing all the above is extra work, but will speed up reviews, reduce rework and improve the feedback loop.</p>

<p>So be selfish and put in the extra work to craft stellar PRs!</p>

<p>This won‚Äôt just make you happier and more productive, but it will also increase your overall impact by helping to inform others and creating an excellent historical reference.</p>

<h2 id="commits">Commits</h2>

<p>Much of the above is also valid for commit messages:</p>

<ul>
  <li>small commits are easier to review since changes are more correlated and have extra context (i.e. commit message)</li>
  <li>great commit messages add extra context and reasoning behind commit changes (optimize for Git bisect)</li>
</ul>

<p>However, at my current company, we squash all commits before merging.</p>

<p>So I‚Äôve personally given up on my commit size and message hygiene and moved my efforts to the PR level instead.</p>

<h2 id="wrap-up">Wrap up</h2>

<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/110612136335930968">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_gaming-the-pull-request-review-system-activity-7079176881228406784-uR2v">Linkedin</a> to let me know you've read this.</p>

<p>Sometimes it‚Äôs good to be a little selfish! Optimize your pull requests to be reviewed as quickly as possible and increase your overall impact and happiness.</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a>.</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="pullrequest" /><category term="commit" /><category term="engineering" /><summary type="html"><![CDATA[As developers, we love to build cool things and ship them as fast as reasonably possible. And to get that done, here are a few things you can do to ‚Äúgame the system‚Äù.]]></summary></entry><entry><title type="html">Interactive versionable architecture diagrams</title><link href="https://jeroenmols.com/blog/2023/06/09/interactive-architecture-diagram/" rel="alternate" type="text/html" title="Interactive versionable architecture diagrams" /><published>2023-06-09T00:00:00+02:00</published><updated>2023-06-09T00:00:00+02:00</updated><id>https://jeroenmols.com/blog/2023/06/09/interactive-architecture-diagram</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/06/09/interactive-architecture-diagram/"><![CDATA[<p>Tired of building un-versionable, lifeless architecture diagrams? Wouldn‚Äôt it be great if you could add your diagram to Git, embed it in your documentation, and have clickable elements?</p>

<p>Well, look no further! In this blog post, we will explore how to generate an interactive system architecture diagram using Graphviz and HTML. Get ready to bring your diagrams to life!</p>

<h2 id="curious">Curious?</h2>

<p>Can‚Äôt wait to see the result of what we‚Äôre going to build, get a sneak peak of the result here:</p>

<p>üëâ <a href="https://jeroenmols.com/img/blog/interactive-architecture-diagram/system_architecture.html" target="\_blank">Interactive system architecture diagram</a>.</p>

<h2 id="building-a-diagram-with-graphviz">Building a Diagram with Graphviz</h2>

<p>Graphviz is a powerful graph visualization tool that offers higher flexibility than alternatives like Mermaid. It allows us to export graphs to Scalable Vector Graphics (SVG) files, which are ideal for embedding in HTML documents. Additionally, Graphviz supports embedding URLs into the graph elements, enabling interactivity.</p>

<p>To start, you‚Äôll need to install Graphviz on your system.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install graphviz
</code></pre></div></div>

<p>Once installed, create a Graphviz file (with a <code class="language-plaintext highlighter-rouge">.dot</code> extension) that defines the architecture diagram. You can specify nodes, edges, and their properties using <a href="https://graphviz.org/documentation/">the DOT language</a>.</p>

<p>Here‚Äôs a brief example of a Graphviz file:</p>

<div class="language-dot highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">digraph</span> <span class="nv">architecture</span> <span class="p">{</span>
  <span class="nv">FrontendApp</span>
  <span class="nv">BackendApp</span>
  <span class="nv">FrontendApp</span> <span class="o">-&gt;</span> <span class="nv">BackendApp</span>
<span class="p">}</span>
</code></pre></div></div>

<p>To export the DOT file to an SVG file, use the following command:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ dot -Tsvg diagram.dot -o diagram.svg
</code></pre></div></div>

<p>Which will yield the following diagram:</p>

<p><img src="https://jeroenmols.com/img/blog/interactive-architecture-diagram/sample.svg" alt="Graphviz diagram example" class="align-center" /></p>

<p>While this is a very simple example of a Graphviz diagram, it is possible to create more complex and better-looking ones.</p>

<p>For the sake of example, let‚Äôs take <a href="https://github.com/JeroenMols/architecturediagrams/blob/main/diagram.dot">the diagram defined here</a> and build an interactive version of that.</p>

<p><img src="https://jeroenmols.com/img/blog/interactive-architecture-diagram/diagram.svg" alt="Graphviz architecture diagram" class="align-center" /></p>

<p>Here are my pro tips for Graphviz to create the layout you want:</p>

<ul>
  <li>Have the diagram lay itself out from left to right</li>
  <li>Add an invisible column on the left with elements that define your rows (use <code class="language-plaintext highlighter-rouge">rank=same</code> to lay out the linked nodes under each other)</li>
  <li>Link each alignment row to the element you want to appear first on that row</li>
  <li>Link elements on different rows with an edge that has a `[constraint=‚Äùfalse‚Äù] attribute</li>
  <li>Use invisible elements to add spacers or to force edges along a certain path</li>
</ul>

<p>By following the suggestions above you can essentially lay out architecture blocks on a grid.</p>

<h2 id="creating-an-html-file-to-embed-the-diagram">Creating an HTML File to Embed the Diagram</h2>

<p>To include the generated SVG in an HTML page, you can use the following code:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"diagram.svg"</span> <span class="na">alt=</span><span class="s">"Architecture diagram"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<p>However, simply using an <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tag to include the SVG won‚Äôt allow the hyperlinks to link to the hosting page. So unfortunately, we have to directly include the SVG code between the <code class="language-plaintext highlighter-rouge">&lt;svg&gt;</code> and <code class="language-plaintext highlighter-rouge">&lt;/svg&gt;</code> tags.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;svg</span> <span class="err">...</span><span class="nt">&gt;</span>
  <span class="c">&lt;!-- SVG content goes here --&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</code></pre></div></div>

<p>A few changes need to be made before embedding the SVG code to ensure compatibility with HTML:</p>

<ul>
  <li>Remove all comments from the SVG file (comments start with <code class="language-plaintext highlighter-rouge">&lt;!--</code> and end with <code class="language-plaintext highlighter-rouge">--&gt;</code>).</li>
  <li>Remove the <code class="language-plaintext highlighter-rouge">xmlns:xlink="http://www.w3.org/1999/xlink"</code> attribute from the root <code class="language-plaintext highlighter-rouge">&lt;svg&gt;</code> tag.</li>
  <li>Remove any <code class="language-plaintext highlighter-rouge">xlink</code> prefixes used throughout the SVG code.</li>
</ul>

<p>Next, let‚Äôs talk about building the HTML page that will contain the diagram.</p>

<p>For each architecture component, we want to link from, we will need to add a section with an anchor link. A way to do this is to add a <code class="language-plaintext highlighter-rouge">&lt;h2&gt;</code> tag with an <code class="language-plaintext highlighter-rouge">id</code> attribute.</p>

<p>As an example, the following section:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;h2</span> <span class="na">id=</span><span class="s">"frontend-app"</span><span class="nt">&gt;</span>Frontend App<span class="nt">&lt;/h2&gt;</span>
</code></pre></div></div>

<p>Can be linked to from the diagram by adding the following <code class="language-plaintext highlighter-rouge">URL</code> (notice the added #):</p>

<div class="language-dot highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">digraph</span> <span class="nv">architecture</span> <span class="p">{</span>
  <span class="nv">FrontendApp</span> <span class="o">[</span><span class="n">URL</span><span class="p">=</span><span class="s2">"#frontend-app"</span><span class="o">]</span>
  <span class="nv">BackendApp</span>
  <span class="nv">FrontendApp</span> <span class="o">-&gt;</span> <span class="nv">BackendApp</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="bringing-it-all-together-the-final-example">Bringing It All Together: The Final Example</h2>

<p>Now that we know how to prepare the SVG and create the HTML file, let‚Äôs add sections and URLs for all diagram components. You can admire <a href="https://jeroenmols.com/img/blog/interactive-architecture-diagram/system_architecture.html" target="\_blank">the result here</a>.</p>

<p>Pretty dope, isn‚Äôt it? üòé</p>

<p>In this example, we have manually written the HTML file, but you could also use Markdown and have the HTML generated for you. I‚Äôm pretty confident this will work with whatever documentation tool you are currently using!</p>

<p>The advantages are numerous:</p>

<ul>
  <li>diagram can be seamlessly added to your existing documentation pages</li>
  <li>interactivity allows users to navigate the system easily</li>
  <li>diagram is fully versionable under Git so you can keep track of changes and collaborate efficiently.</li>
</ul>

<p>Here‚Äôs the <a href="https://github.com/JeroenMols/architecturediagrams">Github repository</a> with the diagram source code.</p>

<h2 id="wrap-up">Wrap up</h2>

<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/110516305062438230">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_interactive-versionable-architecture-diagrams-activity-7073042645714919424-nmgc?utm_source=share&amp;utm_medium=member_desktop">Linkedin</a> to let me know you've read this.</p>

<p>By leveraging Graphviz and directly embedding an SVG diagram in an HTML document, you can create visually appealing diagrams that are interactive.</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a>.</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="graphviz" /><category term="architecture" /><category term="diagram" /><category term="html" /><summary type="html"><![CDATA[Tired of building un-versionable, lifeless architecture diagrams? Wouldn‚Äôt it be great if you could add your diagram to Git, embed it in your documentation, and have clickable elements?]]></summary></entry><entry><title type="html">A privacy friendly RSVP for events</title><link href="https://jeroenmols.com/blog/2023/03/28/privacy-friendly-rsvp/" rel="alternate" type="text/html" title="A privacy friendly RSVP for events" /><published>2023-03-28T00:00:00+02:00</published><updated>2023-03-28T00:00:00+02:00</updated><id>https://jeroenmols.com/blog/2023/03/28/privacy-friendly-rsvp</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/03/28/privacy-friendly-rsvp/"><![CDATA[<p>Planning an event can be stressful, and the last thing you need is worrying about your guests‚Äô privacy. But don‚Äôt worry, I‚Äôve got you covered with a privacy-friendly RSVP option.</p>

<h2 id="opportunity">Opportunity</h2>

<p>There exist plenty of online services (like <a href="https://rsvpify.com/">rsvpify</a>) that offer a slick looking interface and a powerful dashboard to track who‚Äôs coming to your event.</p>

<p>However, such online services require guests to provide personal information such as their name, email, phone number, and sometimes even their address.</p>

<p>While they may be convenient for managing responses, they can also put your guests‚Äô privacy at risk or may even use their information for marketing purposes.</p>

<h2 id="insight">Insight</h2>

<p>But there is a better way: good plain old email.</p>

<ul>
  <li>No middleman</li>
  <li>Senders control when and if to send Email</li>
  <li>No fees</li>
</ul>

<p>Let‚Äôs create a simple HTML website that offers such a privacy-friendly RSVP option.</p>

<p>First, create an HTML file with the following code:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;title&gt;</span>Privacy-Friendly RSVP<span class="nt">&lt;/title&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;button</span> <span class="na">onclick=</span><span class="s">"sendEmail()"</span><span class="nt">&gt;</span>RSVP<span class="nt">&lt;/button&gt;</span>
    <span class="nt">&lt;script&gt;</span>
      <span class="kd">function</span> <span class="nx">sendEmail</span><span class="p">()</span> <span class="p">{</span>
        <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span>
          <span class="dl">'</span><span class="s1">mailto:name.lastname+rsvp@gmail.com?subject=RSVP&amp;body=I will be attending!</span><span class="dl">'</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="nt">&lt;/script&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>This code creates a basic HTML page with a single button. When the button is clicked, it will invoke a JavaScript function that directs the user to their email application and prefills the email receiver address, subject and body.</p>

<p>Notice how we <a href="https://gmail.googleblog.com/2008/03/2-hidden-ways-to-get-more-from-your.html">leverage the <code class="language-plaintext highlighter-rouge">+rsvp</code> suffix in a gmail address</a> to allow to easily filter or label RSVP emails in your mailbox.</p>

<p>Off course, you can customize this code to fit your specific event by changing the email address, subject, and body text.</p>

<p>Guests decide what, when and whether to send. All without having to provide any personal information to a third-party service. It‚Äôs simple, easy, and most importantly, respectful of your guests‚Äô privacy.</p>

<h2 id="full-example">Full example</h2>

<p>Let‚Äôs build a slightly more attractive looking RSVP page:</p>

<p><a href="https://jeroenmols.com/img/blog/privacy-friendly-rsvp/desktop.jpg"><img src="https://jeroenmols.com/img/blog/privacy-friendly-rsvp/desktop.jpg" alt="Privacy friendly RSVP desktop" class="align-center" /></a></p>

<p>That looks on mobile like:</p>

<p><a href="https://jeroenmols.com/img/blog/privacy-friendly-rsvp/mobile.jpg"><img src="https://jeroenmols.com/img/blog/privacy-friendly-rsvp/mobile.jpg" alt="Privacy friendly RSVP mobile" class="align-center" /></a></p>

<p>This can be achieved by starting from the following HTML:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width,initial-scale=1"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body</span>
    <span class="na">background=</span><span class="s">"background.jpg"</span>
    <span class="na">style=</span><span class="s">"
      background-size: cover;
      background-position: center;
      display: flex;
      align-items: center;
      justify-content: center;
    "</span>
  <span class="nt">&gt;</span>
    <span class="nt">&lt;div</span>
      <span class="na">style=</span><span class="s">"
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: start;
        max-width: 800px;
        width: 90%;
        height: 90%;
        background-color: rgba(0, 0, 0, 0.2);
        border-radius: 20px;
        padding: 20px;
      "</span>
    <span class="nt">&gt;</span>
      <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"display: flex; flex-direction: column; align-items: center"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;h1</span>
          <span class="na">style=</span><span class="s">"
            color: white;
            font-family: 'Courier New', Courier, monospace;
            font-size: 8em;
            margin: 0px;
          "</span>
        <span class="nt">&gt;</span>
          Party
        <span class="nt">&lt;/h1&gt;</span>
        <span class="nt">&lt;h2</span>
          <span class="na">style=</span><span class="s">"
            color: white;
            font-family: 'Courier New', Courier, monospace;
            font-size: 2em;
            margin: -25 0 0 0;
          "</span>
        <span class="nt">&gt;</span>
          description
        <span class="nt">&lt;/h2&gt;</span>
      <span class="nt">&lt;/div&gt;</span>

      <span class="nt">&lt;div</span> <span class="na">style=</span><span class="s">"flex-grow: 1"</span><span class="nt">&gt;&lt;/div&gt;</span>

      <span class="nt">&lt;div</span>
        <span class="na">style=</span><span class="s">"display: flex; align-items: flex-start; flex-direction: column"</span>
      <span class="nt">&gt;</span>
        <span class="nt">&lt;p</span>
          <span class="na">style=</span><span class="s">"
            color: white;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1.5em;
            margin: 0px;
            padding: 0 20;
          "</span>
        <span class="nt">&gt;</span>
          Come celebrate with me
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p</span>
          <span class="na">style=</span><span class="s">"
            color: white;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1.5em;
            margin: 0px;
            padding: 0 20;
          "</span>
        <span class="nt">&gt;</span>
          üóìÔ∏è date + hour
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;p</span>
          <span class="na">style=</span><span class="s">"
            color: white;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1.5em;
            margin: 0 0 20 0;
            padding: 0 20;
          "</span>
        <span class="nt">&gt;</span>
          üçª and üçü to enjoy
        <span class="nt">&lt;/p&gt;</span>
        <span class="nt">&lt;iframe</span>
          <span class="na">src=</span><span class="s">"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2246.3233326624286!2d9.124615916552427!3d55.73551088054884!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x464b717428bfa99b%3A0xfba38e2c20ba313a!2sLEGOLAND%C2%AE%20Billund%20Resort!5e0!3m2!1sen!2sbe!4v1680002007769!5m2!1sen!2sbe"</span>
          <span class="na">width=</span><span class="s">"100%"</span>
          <span class="na">height=</span><span class="s">"150"</span>
          <span class="na">style=</span><span class="s">"border: 0"</span>
          <span class="na">allowfullscreen=</span><span class="s">""</span>
          <span class="na">loading=</span><span class="s">"lazy"</span>
          <span class="na">referrerpolicy=</span><span class="s">"no-referrer-when-downgrade"</span>
        <span class="nt">&gt;&lt;/iframe&gt;</span>
        <span class="nt">&lt;button</span>
          <span class="na">style=</span><span class="s">"
            padding: 8 30;
            font-family: 'Courier New', Courier, monospace;
            font-size: 1.5em;
            margin-top: 20;
            background: white;
            border: white;
            align-self: center;
          "</span>
          <span class="na">id=</span><span class="s">"btn-rsvp"</span>
        <span class="nt">&gt;</span>
          RSVP?
        <span class="nt">&lt;/button&gt;</span>
      <span class="nt">&lt;/div&gt;</span>

      <span class="nt">&lt;script&gt;</span>
        <span class="nb">document</span>
          <span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">btn-rsvp</span><span class="dl">'</span><span class="p">)</span>
          <span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="dl">'</span><span class="s1">click</span><span class="dl">'</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
            <span class="kd">var</span> <span class="nx">link</span> <span class="o">=</span>
              <span class="dl">'</span><span class="s1">mailto:name.lastname+rsvp@gmail.com</span><span class="dl">'</span> <span class="o">+</span>
              <span class="dl">'</span><span class="s1">?subject=</span><span class="dl">'</span> <span class="o">+</span>
              <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="dl">'</span><span class="s1">RSVP - My party</span><span class="dl">'</span><span class="p">)</span> <span class="o">+</span>
              <span class="dl">'</span><span class="s1">&amp;body=</span><span class="dl">'</span> <span class="o">+</span>
              <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="dl">'</span><span class="s1">We will be there!</span><span class="dl">'</span><span class="p">);</span>
            <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">link</span><span class="p">;</span>
          <span class="p">});</span>
      <span class="nt">&lt;/script&gt;</span>
    <span class="nt">&lt;/div&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>Just save the code above in <code class="language-plaintext highlighter-rouge">index.html</code> and add a <code class="language-plaintext highlighter-rouge">background.jpg</code> to the same folder to set your desired background.</p>

<p>Party on! üéâ</p>

<h2 id="wrap-up">Wrap up</h2>

<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/110101372976132453">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_a-privacy-friendly-rsvp-for-events-activity-7046488707721289728-VGDJ">Linkedin</a> to let me know you've read this.</p>

<p>You don‚Äôt have to sacrifice privacy for convenience when it comes to event planning. A simple HTML website with a button to send an email is a privacy-friendly RSVP alternative!</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a>.</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="privacy" /><category term="html" /><category term="javascript" /><category term="rsvp" /><summary type="html"><![CDATA[Planning an event can be stressful, and the last thing you need is worrying about your guests‚Äô privacy. But don‚Äôt worry, I‚Äôve got you covered with a privacy-friendly RSVP option.]]></summary></entry><entry><title type="html">Using multiple SSH keys for Github and Github enterprise</title><link href="https://jeroenmols.com/blog/2023/02/06/multiple-ssh-keys/" rel="alternate" type="text/html" title="Using multiple SSH keys for Github and Github enterprise" /><published>2023-02-06T00:00:00+01:00</published><updated>2023-02-06T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2023/02/06/multiple-ssh-keys</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/02/06/multiple-ssh-keys/"><![CDATA[<p>Looking to configure multiple SSH keys on the same computer? For instance to use a different SSH key for your public and enterprise Github contributions.</p>

<p>This quick little post will show you how to do that.</p>

<h2 id="steps">Steps</h2>
<p>In this I‚Äôm assuming you already have an SSH key setup for your enterprise Github account.</p>

<ol>
  <li><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">Create a new SSH key and add it to the ssh-agent</a></li>
  <li>Update your <code class="language-plaintext highlighter-rouge">~/.ssh/config</code> file and add a new host:</li>
</ol>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Host <span class="k">*</span>
  AddKeysToAgent <span class="nb">yes
  </span>UseKeychain <span class="nb">yes

</span>Host github.com
  IdentityFile ~/.ssh/id_github_rsa
  UseKeychain <span class="nb">yes

</span>Host github.mycompany.com
  IdentityFile ~/.ssh/id_rsa
  UseKeychain <span class="nb">yes</span>
</code></pre></div></div>

<p>I‚Äôm explicitly defining each host, but you could also assign a SSH key to all remaining hosts using <code class="language-plaintext highlighter-rouge">Host *</code>.</p>

<p>That‚Äôs it!</p>

<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/109819480309091738">Mastodon</a> or <a href="https://www.linkedin.com/feed/update/urn:li:share:7028447120189726720/">Linkedin</a> to let me know you've read this.</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a>.</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="ssh" /><category term="terminal" /><category term="tips" /><summary type="html"><![CDATA[Looking to configure multiple SSH keys on the same computer? For instance to use a different SSH key for your public and enterprise Github contributions.]]></summary></entry><entry><title type="html">Removing all trackers from my website</title><link href="https://jeroenmols.com/blog/2023/01/29/remove-trackers/" rel="alternate" type="text/html" title="Removing all trackers from my website" /><published>2023-01-29T00:00:00+01:00</published><updated>2023-01-29T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2023/01/29/remove-trackers</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/01/29/remove-trackers/"><![CDATA[<p>These past years I‚Äôve grown to be more privacy-aware. And while this post isn‚Äôt about how I‚Äôm increasing my personal privacy, I‚Äôd like to talk about how I‚Äôm increasing yours.</p>

<p>My website had three services integrated:</p>

<ul>
  <li><a href="https://analytics.google.com/analytics/web/provision/#/provision">Google Analytics</a> gave me insights into how much people read my content and what topics were popular to write about.</li>
  <li><a href="https://www.google.com/adsense/start/">Google Adsense</a> showed ads underneath every blog post and enabled me to monetize my content. With this I received two payments (70.84 euro in 2019 and 74.20 euro in 2020), covering the expenses for my domain name for about 14 years.</li>
  <li><a href="https://disqus.com/">Disqus comments</a> allowed people to comment on my content, but since I didn‚Äôt pay for the service Disqus was also serving advertisements.</li>
</ul>

<p>And while these services were adding some value to my website, they were doing so at the cost of your privacy. By default (!!!), they not only track your interaction with my website, but also detailed information about you (gender, age, approximate location,‚Ä¶) and they even track you across different websites.</p>

<p>But should I really be collecting all that data about you?</p>

<p>Should I really hand off all that data to those services?</p>

<p>Have I ever asked your consent about any of this?</p>

<p>Well, I no longer believe it is ‚Äúnormal‚Äù for websites or products to engage in these practices. That every experience needs to be personalized. Or that we should give away our privacy so easily.</p>

<p>Therefore I‚Äôve decided to strip all such services. Now my website is a safe space where you can enjoy (hopefully) my content without worrying about advertisements or tracker blockers.</p>

<p>However, I do still care about your opinion!</p>

<p>So moving forward you can:</p>

<ul>
  <li>Let me know you‚Äôve read this by liking one of my social posts</li>
  <li>Talk about my content on <a href="https://www.reddit.com/">Reddit</a> or <a href="https://news.ycombinator.com/">Hacker News</a></li>
  <li>Send me feedback/questions on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a></li>
</ul>

<p>You‚Äôre in full control whether you decide to reach out or not!</p>

<p>I‚Äôll keep doing my best to provide you with interesting content (which is a ton of work) and hence appreciate every single like or shoutout.</p>

<h2 id="wrap-up">Wrap-up</h2>
<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/109773847044031984">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_removing-all-trackers-from-my-website-activity-7025526545435754496-JCWo">Linkedin</a> to let me know you've read this.</p>

<p>My website is now fully tracker and advertisement free, I‚Äôll do my best to guarantee your privacy moving forward.</p>

<p>If this was helpful to you, please let me know on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a>!</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="website" /><category term="privacy" /><category term="trackers" /><summary type="html"><![CDATA[These past years I‚Äôve grown to be more privacy-aware. And while this post isn‚Äôt about how I‚Äôm increasing my personal privacy, I‚Äôd like to talk about how I‚Äôm increasing yours.]]></summary></entry><entry><title type="html">Android emulator access to local server</title><link href="https://jeroenmols.com/blog/2023/01/25/development-server-emulator/" rel="alternate" type="text/html" title="Android emulator access to local server" /><published>2023-01-25T00:00:00+01:00</published><updated>2023-01-25T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2023/01/25/development-server-emulator</id><content type="html" xml:base="https://jeroenmols.com/blog/2023/01/25/development-server-emulator/"><![CDATA[<p>How can you connect your app on an Android emulator to a development server running on the localhost of your computer?</p>

<h2 id="the-problem">The problem</h2>
<p>Since Android emulators create their own virtual network, they cannot access devices on your local network.</p>

<p>This means:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">localhost</code> refers to the emulator, not your laptop</li>
  <li>local MDNS addresses <code class="language-plaintext highlighter-rouge">jmols.local</code> are not accessible</li>
</ul>

<p>So accessing our development server at <code class="language-plaintext highlighter-rouge">https://jmols.local:3000</code> results in the following error:</p>

<p><a href="https://jeroenmols.com/img/blog/developmentserveremulator/error.png" class="align-center"><img src="https://jeroenmols.com/img/blog/developmentserveremulator/error.png" alt="Error trying to connect to the connect to a local network IP/MDNS address" /></a></p>

<h2 id="method-1-use-your-computers-ip-address">Method 1: use your computers IP address</h2>
<blockquote>
  <p>Huge thanks to <a href="https://androiddev.social/@EdyBolos">Eduard-Cristian Bolo»ô</a> for suggesting this solution.</p>
</blockquote>

<p>Since Android emulators can <a href="https://developer.android.com/studio/run/emulator-networking#networkinglimitations">access IP addresses on your network</a>, you can directly point to the IP address of your computer.</p>

<p>Instead of loading <code class="language-plaintext highlighter-rouge">https://jmols.local:3000</code>, you can load <code class="language-plaintext highlighter-rouge">https://&lt;YOUR_COMPUTER_IP&gt;:3000</code> (e.g. <code class="language-plaintext highlighter-rouge">https://192.168.1.123</code>).</p>

<p>This works on both emulators and Android phones!</p>

<p>However you may have to update the IP after connecting to a different network or when your IP lease expires.</p>

<h2 id="method-2-the-loopback-address">Method 2: the loopback address</h2>
<p>Another approach is to change the server URL in your app and point it to <code class="language-plaintext highlighter-rouge">10.0.2.2</code>. This is a <a href="https://developer.android.com/studio/run/emulator-networking#networkaddresses">special alias to your host loopback interface</a> (127.0.0.1 on your development machine).</p>

<p>So instead of loading <code class="language-plaintext highlighter-rouge">https://jmols.local:3000</code>, our app will load <code class="language-plaintext highlighter-rouge">https://10.0.2.2:3000</code> instead.</p>

<p>That fixes the emulator, but now our app no longer works on real devices. (since the loopback IP doesn‚Äôt exist there).</p>

<p>Can we find a single solution that works on both emulators and devices?</p>

<h2 id="method-3-redirect-the-emulator">Method 3: redirect the emulator</h2>
<p>In this solution, we‚Äôll instruct the emulator to redirect the IP address from the host machine to the loopback IP address automatically. We‚Äôll do this by editing the <code class="language-plaintext highlighter-rouge">etc/hosts</code> file on the Android emulator.</p>

<p>First, we need to ensure the <code class="language-plaintext highlighter-rouge">etc/hosts</code> file is writable:</p>

<ol>
  <li>Create a new emulator (non Google Play services, so we have access to root)</li>
  <li>Find the emulator AVD name of the emulator
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>emulator -list-avds
</code></pre></div>    </div>
  </li>
  <li>Start your emulator from the command line with the option to enable a writable system
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>emulator -avd "&lt;AVD_NAME_HERE&gt;" -writable-system
</code></pre></div>    </div>
  </li>
  <li>Run ADB as root
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb root
</code></pre></div>    </div>
  </li>
  <li>Disable verified boot
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb disable-verity
</code></pre></div>    </div>
  </li>
  <li>Reboot the device
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb reboot
</code></pre></div>    </div>
  </li>
  <li>Wait for the device to be rebooted (ready when <code class="language-plaintext highlighter-rouge">adb shell</code> works)</li>
  <li>Run ADB as root (again)
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb root
</code></pre></div>    </div>
  </li>
  <li>Remount partitions as read-write
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb remount
</code></pre></div>    </div>
  </li>
</ol>

<p>Now we can overwrite the <code class="language-plaintext highlighter-rouge">etc/hosts</code> file!</p>

<ol>
  <li>First get the existing hosts file
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb pull etc/hosts
</code></pre></div>    </div>
  </li>
  <li>Add an entry to direct your local server domain to the loopback address: <code class="language-plaintext highlighter-rouge">10.0.2.2   &lt;YOUR_LOCAL_HOSTNAME&gt;</code>. Your hostfile should look like this:</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>127.0.0.1       localhost
::1             ip6-localhost
10.0.2.2        jmols.local
</code></pre></div></div>

<ol>
  <li>Save and push the file back to the emulator:
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb push hosts etc/hosts
</code></pre></div>    </div>
  </li>
</ol>

<p>Now our emulator can access our development server at <code class="language-plaintext highlighter-rouge">https://jmols.local:3000</code>!</p>

<blockquote>
  <p>Notice how this solution can easily be generalized to any IP address on your local network.</p>
</blockquote>

<h2 id="bonus-adb-reverse">Bonus: ADB reverse</h2>
<blockquote>
  <p>Huge thanks to <a href="https://androiddev.social/@jefflewis@hachyderm.io">Jeff Lewis</a> for suggesting this solution.</p>
</blockquote>

<p><a href="https://reactnative.dev/docs/running-on-device#method-1-using-adb-reverse-recommended">React native uses ADB reverse</a> to bind an emulator port to a port on your computer.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb reverse tcp:3000 tcp:3000
</code></pre></div></div>

<p>Similarly to the loopback address, this solution isn‚Äôt suitable for a physical device.</p>

<h2 id="wrap-up">Wrap-up</h2>
<p style="color: #646769; background: #f2f3f3; padding: 20px;">This site is 100% tracker free, :heart: for liking my post on <a href="https://androiddev.social/@Jeroenmols/109749532076281170">Mastodon</a> or <a href="https://www.linkedin.com/posts/jeroenmols_androiddev-server-react-activity-7023970812340641792-jtiW">Linkedin</a> to let me know you've read this.</p>

<p>Depending on your situation, there are several ways to connect an emulator to a local server. A universal - though complicated way - is to make <code class="language-plaintext highlighter-rouge">etc/hosts</code> writable so you can access your development server using your local MDNS name.</p>

<p>If this was helpful to you, please let me know on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a>!</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="android" /><category term="adb" /><category term="emulator" /><category term="localhost" /><category term="server" /><summary type="html"><![CDATA[How can you connect your app on an Android emulator to a development server running on the localhost of your computer?]]></summary></entry><entry><title type="html">Transfer many large files from Android</title><link href="https://jeroenmols.com/blog/2022/12/17/pull-files-android/" rel="alternate" type="text/html" title="Transfer many large files from Android" /><published>2022-12-17T00:00:00+01:00</published><updated>2022-12-17T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2022/12/17/pull-files-android</id><content type="html" xml:base="https://jeroenmols.com/blog/2022/12/17/pull-files-android/"><![CDATA[<p>Trying to get a large number of files from your Android phone, but Android File Transfer freezing up?</p>

<p>Here‚Äôs what I learned trying to pull ~170 Gb from my Pixel phone.</p>

<h2 id="pulling-files-from-your-phone">Pulling files from your phone</h2>
<p>For this to work you need to <a href="https://www.xda-developers.com/install-adb-windows-macos-linux/">have ADB installed</a> on your computer and <a href="https://developer.android.com/studio/debug/dev-options#enable">developer options enabled</a> on your Android phone.</p>

<p>First, check how large the directory you‚Äôre trying to pull is. Let‚Äôs assume we want to pull the Camera folder:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb shell
du -sh sdcard/DCIM

# Output:
171.8G	sdcard/DCIM
</code></pre></div></div>

<blockquote>
  <p>Don‚Äôt forget to run <code class="language-plaintext highlighter-rouge">exit</code> to leave the ADB shell.</p>
</blockquote>

<p>If you have enough disk space, you can pull the entire folder to your computer using <code class="language-plaintext highlighter-rouge">adb pull</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb pull -p sdcard/DCIM/ .   
</code></pre></div></div>

<blockquote>
  <p>Notice the <code class="language-plaintext highlighter-rouge">-p</code> option to show transfer progress</p>
</blockquote>

<p>Unfortunately, I didn‚Äôt have enough disk space‚Ä¶ So instead, let‚Äôs pull the files in batches, by using <code class="language-plaintext highlighter-rouge">find</code> to search for files.</p>

<p>For instance to find all video files:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>adb shell find `sdcard/DCIM/Camera/*.mp4`
</code></pre></div></div>

<p>The result of <code class="language-plaintext highlighter-rouge">find</code> can then be piped into <code class="language-plaintext highlighter-rouge">adb pull</code> to transfer the files one by one to your computer.</p>

<p>Some possibly handy variants are:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Pull all video files
adb shell find 'sdcard/DCIM/Camera/*.mp4' | xargs -n1 adb pull

# Pull all image files
adb shell find 'sdcard/DCIM/Camera/*.jpg' | xargs -n1 adb pull

# Pull al files from the past year
adb shell find 'sdcard/DCIM/Camera/PXL_2022*'

# Pull all files from the past month
adb shell find 'sdcard/DCIM/Camera/PXL_202212*'
</code></pre></div></div>

<h2 id="deleting-pulled-files">Deleting pulled files</h2>
<p>Now that the files are pulled from your phone, you probably also want to delete them to free up phone storage.</p>

<p>The easiest way to do so is to delete the entire folder from your phone:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Caution: this permanently deletes all your files!
adb shell rm &lt;folder-name-here&gt;
</code></pre></div></div>

<p>However, if you hadn‚Äôt pulled all files from that folder yet, you will include data loss.</p>

<p>So instead of deleting the folder, we‚Äôll only delete the files that we just synced to our computer.</p>

<p>First list all of the files in the synced folder on your computer using <code class="language-plaintext highlighter-rouge">find</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name '*'
</code></pre></div></div>

<blockquote>
  <p>However, you can also be more granular here if you want:</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># List all images
find . -name '*.jpg'
</code></pre></div>  </div>
</blockquote>

<p>Next, for each listed file, reconstruct the original file path on your phone using <code class="language-plaintext highlighter-rouge">sed</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name '*' | sed 's:.:sdcard/DCIM/Camera:'
</code></pre></div></div>

<p>And finally, delete those files from your phone by piping the result into <code class="language-plaintext highlighter-rouge">adb shell rm</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name '*' | sed 's:.:sdcard/DCIM/Camera:' | xargs -n1 adb shell rm $1
</code></pre></div></div>

<blockquote>
  <p>Note I highly recommend doing a dry run first to check what files will be deleted by using <code class="language-plaintext highlighter-rouge">adb shell ls -l</code>:</p>
  <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find . -name '*' | sed 's:.:sdcard/DCIM/Camera:' | xargs -n1 adb shell ls -l $1
</code></pre></div>  </div>
</blockquote>

<p>Finally, some possibly handy variants are:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Delete all video files from the current folder from your phone
find . -name '*.mp4' | sed 's:.:sdcard/DCIM/Camera:' | xargs -n1 adb shell rm $1

# Delete all image files from the current folder from your phone
find . -name '*.jpg' | sed 's:.:sdcard/DCIM/Camera:' | xargs -n1 adb shell rm $1
</code></pre></div></div>

<h2 id="wrap-up">Wrap-up</h2>
<p>Android file transfer unfortunately isn‚Äôt the most reliable solution to transfer files from your phone to your computer. However, thanks to <code class="language-plaintext highlighter-rouge">adb</code> there is a fast and reliable way to get (a subset of) files from your Android device.</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a> or thanking me on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a> or <a href="https://twitter.com/molsjeroen">Twitter</a>!</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="android" /><category term="adb" /><category term="backup" /><category term="files" /><summary type="html"><![CDATA[Trying to get a large number of files from your Android phone, but Android File Transfer freezing up?]]></summary></entry><entry><title type="html">Verify Github profile link on Mastodon</title><link href="https://jeroenmols.com/blog/2022/11/26/mastodon-verify-github/" rel="alternate" type="text/html" title="Verify Github profile link on Mastodon" /><published>2022-11-26T00:00:00+01:00</published><updated>2022-11-26T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2022/11/26/mastodon-verify-github</id><content type="html" xml:base="https://jeroenmols.com/blog/2022/11/26/mastodon-verify-github/"><![CDATA[<p>Looking to get a fancy verified checkmark on Mastodon for your Github account?</p>

<p>This post details how I made this work.</p>

<h2 id="steps">Steps</h2>
<blockquote>
  <p>Before I get started, huge thanks to <a href="https://fedi.simonwillison.net/@simon">Simon Wilson</a> for inspiring me with the original idea.</p>
</blockquote>

<p>In his <a href="https://til.simonwillison.net/mastodon/verifying-github-on-mastodon">excellent post</a> Simon details how to leverage the <code class="language-plaintext highlighter-rouge">your-username.github.io</code> static webpage to prove Github domain ownership.</p>

<p>The idea is that proving I own <code class="language-plaintext highlighter-rouge">jeroenmols.github.io</code> is equivalent to proving ownership of <code class="language-plaintext highlighter-rouge">github.com/jeroenmols</code>.</p>

<p>However, I can‚Äôt simply redirect <a href="https://jeroenmols.github.io">jeroenmols.github.io</a> to my Github profile as I already host my <a href="https://jeroenmols.com">my personal website</a> on that domain. (I use a <a href="https://github.com/JeroenMols/jeroenmols.github.io/blob/master/CNAME">CNAME record</a> to make both domains equivalent).</p>

<p>Consequently, Simon‚Äôs approach didn‚Äôt work for me. Now what?</p>

<p>Well instead of redirecting the entire domain, I decided to redirect a sub-page. To do this, I:</p>

<ol>
  <li>Added a new page <code class="language-plaintext highlighter-rouge">https://jeroenmols.com/github</code></li>
  <li>Included the Mastodon verification tag: <code class="language-plaintext highlighter-rouge">&lt;link href="https://androiddev.social/@jeroenmols" rel="me"&gt;</code></li>
  <li>Have the page redirect to my Github profile</li>
  <li>Use the domain <code class="language-plaintext highlighter-rouge">jeroenmols.github.io/github</code> on my Mastodon profile</li>
</ol>

<p>The webpage content looks like this:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"utf-8"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;title&gt;</span>Redirecting to github.com/jeroenmols /<span class="nt">&lt;/title&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"refresh"</span> <span class="na">content=</span><span class="s">"0; URL=https://github.com/jeroenmols"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"https://github.com/jeroenmols"</span> <span class="na">rel=</span><span class="s">"me"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"https://jeroenmols.com"</span> <span class="na">rel=</span><span class="s">"me"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">href=</span><span class="s">"https://androiddev.social/@jeroenmols"</span> <span class="na">rel=</span><span class="s">"me"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/html&gt;</span>

</code></pre></div></div>

<p>And my <a href="https://androiddev.social/@Jeroenmols">Mastodon profile</a>, now looks like this:</p>

<p><img src="https://jeroenmols.com/img/blog/mastodonverifygithub/mastodon-profile.png" alt="Mastondon profile" class="align-center" /></p>

<p>That‚Äôs it!</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a> or thanking me on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a> or <a href="https://twitter.com/molsjeroen">Twitter</a>!</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="mastodon" /><category term="github" /><category term="tips" /><summary type="html"><![CDATA[Looking to get a fancy verified checkmark on Mastodon for your Github account?]]></summary></entry><entry><title type="html">Test React app on mobile without Wi-Fi</title><link href="https://jeroenmols.com/blog/2022/11/19/react-local-development/" rel="alternate" type="text/html" title="Test React app on mobile without Wi-Fi" /><published>2022-11-19T00:00:00+01:00</published><updated>2022-11-19T00:00:00+01:00</updated><id>https://jeroenmols.com/blog/2022/11/19/react-local-development</id><content type="html" xml:base="https://jeroenmols.com/blog/2022/11/19/react-local-development/"><![CDATA[<p>Traveling by train or plane and want to test your react app on your mobile phone? This quick post explains how to access your react development server from your phone without a Wi-Fi connection.</p>

<h2 id="steps">Steps</h2>

<ol>
  <li>Connect your phone to your laptop using a USB cable</li>
  <li>Enable <code class="language-plaintext highlighter-rouge">USB tethering</code>
    <ul>
      <li>Android: System settings &gt; Network &amp; internet &gt; Hotspot &amp; tethering &gt; USB tethering</li>
    </ul>
  </li>
  <li>Start your react server on your laptop <code class="language-plaintext highlighter-rouge">npm start</code></li>
  <li>Open your servers <code class="language-plaintext highlighter-rouge">ip:port</code> on your phone</li>
</ol>

<p>That‚Äôs it!</p>

<p>If this was helpful to you, consider <a href="https://www.buymeacoffee.com/jeroen">buying me a coffee</a> or thanking me on <a href="https://androiddev.social/@Jeroenmols">Mastodon</a> or <a href="https://twitter.com/molsjeroen">Twitter</a>!</p>]]></content><author><name>Jeroen Mols</name></author><category term="blog" /><category term="react" /><category term="offline" /><category term="tips" /><summary type="html"><![CDATA[Traveling by train or plane and want to test your react app on your mobile phone? This quick post explains how to access your react development server from your phone without a Wi-Fi connection.]]></summary></entry></feed>